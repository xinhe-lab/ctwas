% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ctwas_region_data.R
\name{assemble_region_data}
\alias{assemble_region_data}
\title{Assembles data for all the regions}
\usage{
assemble_region_data(
  region_info,
  z_snp,
  z_gene,
  weights,
  snp_map,
  thin = 1,
  maxSNP = Inf,
  min_group_size = 100,
  trim_by = c("z", "random"),
  thin_by = c("ref", "gwas"),
  adjust_boundary_genes = TRUE,
  ncore = 1,
  seed = 99,
  logfile = NULL
)
}
\arguments{
\item{region_info}{a data frame of region definitions.}

\item{z_snp}{A data frame with columns: "id", "z", giving the z-scores for SNPs.}

\item{z_gene}{A data frame with columns: "id", "z", giving the z-scores for genes.}

\item{weights}{a list of preprocessed weights.}

\item{snp_map}{a list of data frames with SNP-to-region map for the reference.}

\item{thin}{The proportion of SNPs to be used for the parameter estimation and
initial screening region steps.
Smaller \code{thin} parameters reduce runtime at the expense of accuracy.
The fine mapping step is rerun using full SNPs for regions with strong gene signals.}

\item{maxSNP}{Inf or integer. Maximum number of SNPs in a region. Default is
Inf, no limit. This can be useful if there are many SNPs in a region and you don't
have enough memory to run the program.}

\item{min_group_size}{Minimum number of genes for a group to be included.}

\item{trim_by}{remove SNPs if the total number of SNPs exceeds \code{maxSNP},
options: "z" (trim SNPs with lower |z|), "random".}

\item{thin_by}{options for thinning SNPs,
"reference": thin reference SNPs, "gwas": thin GWAS SNPs.}

\item{adjust_boundary_genes}{If TRUE, identify cross-boundary genes, and
adjust region_data.}

\item{ncore}{The number of cores used to parallelize susie over regions}

\item{seed}{seed for random sampling}

\item{logfile}{path to the log file, if NULL will print log info on screen.}
}
\value{
a list with region_data and cross-boundary genes
}
\description{
Assembles data for all the regions
}
